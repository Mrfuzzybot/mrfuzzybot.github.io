{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/Dialogs.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/sendMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","activeClassName","s","personSelected","className","person","to","name","Message","message","maxLength20","maxLengthCreator","WrappedSendMessageForm","reduxForm","form","action","onSubmit","handleSubmit","Field","component","Textarea","input","validate","required","send","Dialogs","dialogElements","messagesPage","dialogs","map","d","key","messagesElements","messages","m","content","people","sendMessage","compose","connect","state","dispatch","data","sendMessageCreator","messageText","Component","RedirectContainer","this","isAuth","React","auth"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,wBAAwB,eAAiB,gCAAgC,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,wB,+FCapSC,EAVI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,6BACE,kBAAC,IAAD,CAASC,gBAAiBC,IAAEC,eAAgBC,UAAWF,IAAEG,OAAQC,GAAIP,GAAOD,EAAMS,QCA3EC,EALC,SAACV,GACf,OACI,yBAAKM,UAAWF,IAAEO,SAAUX,EAAMW,U,iCCClCC,EAAcC,YAAiB,IAY9B,IAAMC,EAAyBC,YAAU,CAACC,KAAM,eAAjBD,EAXtC,SAAyBf,GACvB,OAAO,0BAAMiB,OAAO,GAAGC,SAAUlB,EAAMmB,aAAcb,UAAWF,IAAEY,MAChE,kBAACI,EAAA,EAAD,CAAOC,UAAWC,IACXb,KAAK,cACLH,UAAWF,IAAEmB,MACbC,SAAU,CAACC,IAAUb,KAE5B,4BAASN,UAAWF,IAAEsB,MAAtB,YCcWC,EApBC,SAAC3B,GAEf,IAAM4B,EACJ5B,EAAM6B,aAAaC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMwB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,QAC3EgC,EACJlC,EAAM6B,aAAaM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASsB,IAAKG,EAAElC,GAAIA,GAAIkC,EAAElC,QAErF,OACE,6BAASI,UAAWF,IAAEiC,SACpB,yBAAK/B,UAAWF,IAAEkC,QACfV,GAEH,yBAAKtB,UAAWF,IAAE+B,UACfD,EACD,kBAACpB,EAAD,CAAwBI,SAAUlB,EAAMuC,iB,8DCDjCC,sBACXC,aAfkB,SAACC,GACrB,MAAM,CACJb,aAAca,EAAMb,iBAIC,SAACc,GACxB,MAAM,CACJJ,YAAa,SAACK,GAAD,OAAUD,EAASE,YAAmBD,EAAKE,oBCX5B,SAACC,GAE/B,IAIMC,EANuC,iLAQzC,OAAKC,KAAKjD,MAAMkD,OACT,kBAACH,EAAcE,KAAKjD,OADI,kBAAC,IAAD,CAAUQ,GAAI,eARJ,GAMb2C,IAAMJ,WAStC,OADuCN,aAZJ,SAACC,GAAD,MAAY,CAC7CQ,OAAQR,EAAMU,KAAKF,UAWkBT,CAAoCO,KDG9DR,CAGbb","file":"static/js/4.944ec91a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__2aHGZ\",\"messages\":\"Dialogs_messages__3mKs-\",\"people\":\"Dialogs_people__1HrZ8\",\"message\":\"Dialogs_message__EjLwv\",\"person\":\"Dialogs_person__3wjWv\",\"personSelected\":\"Dialogs_personSelected__3f6T1\",\"input\":\"Dialogs_input__16R1X\",\"send\":\"Dialogs_send__3nTCP\",\"form\":\"Dialogs_form__3JoU3\"};","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n      <div>\r\n        <NavLink activeClassName={s.personSelected} className={s.person} to={path}>{props.name}</NavLink>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n      <div className={s.message}>{props.message}</div>\r\n  )\r\n};\r\nexport default Message","import React from 'react'\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormsControls\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nfunction sendMessageForm(props) {\r\n  return <form action=\"\" onSubmit={props.handleSubmit} className={s.form}>\r\n    <Field component={Textarea}\r\n           name='messageText'\r\n           className={s.input}\r\n           validate={[required, maxLength20]}\r\n    />\r\n    <button  className={s.send}>Send</button>\r\n  </form>;\r\n}\r\n\r\nexport const WrappedSendMessageForm = reduxForm({form: 'sendMessage'})(sendMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/Dialogs\";\r\nimport Message from \"./Message/Message\";\r\nimport { WrappedSendMessageForm } from \"./sendMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  // map\r\n  const dialogElements =\r\n    props.messagesPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n  const messagesElements =\r\n    props.messagesPage.messages.map(m => <Message message={m.message} key={m.id} id={m.id} />);\r\n\r\n  return (\r\n    <section className={s.content}>\r\n      <div className={s.people}>\r\n        {dialogElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n        <WrappedSendMessageForm onSubmit={props.sendMessage} />\r\n      </div>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Dialogs","import {sendMessageCreator} from \"../../Redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    messagesPage: state.messagesPage\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    sendMessage: (data) => dispatch(sendMessageCreator(data.messageText)),\r\n  }\r\n\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  const mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\n  class RedirectContainer extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n\r\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectContainer);\r\n  return ConnectedAuthRedirectComponent\r\n\r\n};"],"sourceRoot":""}