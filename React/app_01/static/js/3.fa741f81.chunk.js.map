{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Person/Person.module.css","components/Profile/Person/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Person/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/Person/Person.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","onDoubleClick","Person","profile","person","avatar","avatarLogo","src","photos","large","userLogoDefault","alt","info","infoText","fullName","infoTextMin","aboutMe","contacts","facebook","Preloader","Post","post","message","like","likesCount","dislike","MyPosts","React","memo","console","log","postElements","posts","reverse","map","p","key","id","WrappedAddNewPostForm","onSubmit","addPost","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","newPost","Field","name","component","Textarea","validate","required","button","MyPostsContainer","connect","state","profilePage","dispatch","data","addPostActionCreator","newPostText","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getStatus","getUserProfile","Component","compose","auth","isAuth","withRouter"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,oBCApED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,WAAa,2BAA2B,UAAY,4B,oBCAtID,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,QAAU,6BAA6B,SAAW,8BAA8B,OAAS,8B,oBCA9ID,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,0B,oBCAlID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,wB,6LCkCjEC,EAhCgB,SAACC,GAAW,IAAD,EACRC,oBAAS,GADD,mBACjCC,EADiC,KACvBC,EADuB,OAEZF,mBAASD,EAAMI,QAFH,mBAEjCA,EAFiC,KAEzBC,EAFyB,KAIxCC,qBAAU,WACRD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAYV,OACE,yBAAKG,UAAWC,IAAEJ,QACdF,EAEE,2BAAOO,OAbY,WACzBN,GAAY,GACZH,EAAMU,aAAaN,IAYbO,WAAW,EACXC,SAVe,SAACC,GACtBR,EAAUQ,EAAEC,cAAcC,QAUpBA,MAAOX,IAJP,0BAAMY,cAbW,kBAAMb,GAAY,KAaKH,EAAMI,QAAU,eCUnDa,EA5BA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASd,EAA2B,EAA3BA,OAAQM,EAAmB,EAAnBA,aACjC,OAAKQ,EAIH,oCAEE,yBAAKX,UAAWC,IAAEW,QAChB,yBAAKZ,UAAWC,IAAEY,QAChB,yBAAKb,UAAWC,IAAEa,WAChBC,IAAKJ,EAAQK,OAAOC,MAAQN,EAAQK,OAAOC,MAAQC,IAAiBC,IAAI,MAE5E,yBAAKnB,UAAWC,IAAEmB,MAChB,kBAAC,EAAD,CAAwBvB,OAAQA,EAAQM,aAAcA,IACtD,wBAAIH,UAAWC,IAAEoB,UAAWV,EAAQW,UAEpC,uBAAGtB,UAAWC,IAAEsB,aAAhB,yCAAsCZ,EAAQa,SAC9C,uBAAGxB,UAAWC,IAAEoB,UAAWV,EAAQW,UAEnC,uBAAGtB,UAAWC,IAAEsB,aAAhB,oDACA,uBAAGvB,UAAWC,IAAEoB,UAAhB,aAAqCV,EAAQc,SAASC,aAlBrD,kBAACC,EAAA,EAAD,O,4CCQIC,EAbF,SAACnC,GACZ,OACE,yBAAKO,UAAWC,IAAE4B,MAChB,yBAAKd,IAAI,iDAAiDI,IAAI,KAC9D,8BAAO1B,EAAMqC,SACb,4BAAQ9B,UAAWC,IAAE8B,MACnB,8BAAOtC,EAAMuC,WAAb,KADF,QAIA,4BAAQhC,UAAWC,IAAEgC,SAArB,a,iCCJAC,EAAUC,IAAMC,MAAK,SAAA3C,GACzB4C,QAAQC,IAAI,WACZ,IAAIC,EACF,YAAI9C,EAAM+C,OAAOC,UACdC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMC,IAAKD,EAAEE,GAAIf,QAASa,EAAEb,QAASE,WAAYW,EAAEX,gBAEjE,OACE,yBAAKhC,UAAWC,IAAEuC,OAChB,kBAACM,EAAD,CAAuBC,SAAUtD,EAAMuD,UACtCT,MAKDU,EAAcC,YAAiB,IAW/BJ,EAAwBK,YAAU,CAAEC,KAAM,cAAlBD,EATP,SAAC1D,GACtB,OAAO,0BAAMsD,SAAUtD,EAAM4D,aAAcrD,UAAWC,IAAEqD,SACtD,kBAACC,EAAA,EAAD,CACEC,KAAK,cACLC,UAAWC,IACXC,SAAU,CAACC,IAAUX,KACvB,4BAAQjD,UAAWC,IAAE4D,QAArB,gBAKW3B,I,eClBA4B,EADUC,aAXD,SAACC,GACvB,MAAM,CACJxB,MAAOwB,EAAMC,YAAYzB,UAGF,SAAC0B,GAC1B,MAAM,CACJlB,QAAS,SAACmB,GAAD,OAAUD,EAASE,YAAqBD,EAAKE,kBAIjCN,CAA6C7B,GCDvDoC,EAVC,SAAC7E,GACf,OACE,6BAASO,UAAWC,IAAEU,SACpB,kBAAC,EAAD,CAAQA,QAASlB,EAAMkB,QACfd,OAAQJ,EAAMI,OACdM,aAAcV,EAAMU,eAC5B,kBAAC,EAAD,Q,eCJAoE,E,4LAEF,IAAIC,EAASC,KAAKhF,MAAMiF,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAKhF,MAAMmF,mBAElBH,KAAKhF,MAAMoF,QAAQC,KAAK,UAG5BL,KAAKhF,MAAMsF,UAAUP,GACrBC,KAAKhF,MAAMuF,eAAeR,K,+BAI1B,OAAO,kBAAC,EAAD,iBACDC,KAAKhF,MADJ,CAELkB,QAAS8D,KAAKhF,MAAMkB,QACpBd,OAAQ4E,KAAKhF,MAAMI,OACnBM,aAAcsE,KAAKhF,MAAMU,oB,GAlBAgC,IAAM8C,WA+BtBC,sBACbnB,aATsB,SAACC,GAAD,MAAY,CAClCrD,QAASqD,EAAMC,YAAYtD,QAC3Bd,OAAQmE,EAAMC,YAAYpE,OAC1B+E,iBAAkBZ,EAAMmB,KAAKX,OAC7BY,OAAQpB,EAAMmB,KAAKC,UAKM,CAAEJ,mBAAgBD,cAAW5E,mBACtDkF,IAFaH,CAGbX","file":"static/js/3.fa741f81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2Y-bk\",\"content__img\":\"Profile_content__img__1YcnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"Person_person__1YuHs\",\"avatar\":\"Person_avatar__3wlRl\",\"avatarLogo\":\"Person_avatarLogo__2VcGn\",\"wallpaper\":\"Person_wallpaper__3fs5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"ProfileInfo_posts__31BO1\",\"newPost\":\"ProfileInfo_newPost__3z_3K\",\"textarea\":\"ProfileInfo_textarea__1DFU6\",\"button\":\"ProfileInfo_button__2NxM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__11nZm\",\"newPost\":\"MyPosts_newPost__1Ya5t\",\"textarea\":\"MyPosts_textarea__l2Iw0\",\"button\":\"MyPosts_button__2iBEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3Z0sj\",\"like\":\"Post_like__uGU3w\",\"dislike\":\"Post_dislike__1wUXR\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => setEditMode(true)\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  };\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      {!editMode\r\n        ? <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n        : <input onBlur={deActivateEditMode}\r\n          autoFocus={true}\r\n          onChange={onStatusChange}\r\n          value={status}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from './Person.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userLogoDefault from '../../../assets/images/user.png';\r\nimport ProfileStatusWithHooks from './ProfileInfo/ProfileStatusWithHooks';\r\n\r\nconst Person = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <div className={s.person}>\r\n        <div className={s.avatar}>\r\n          <img className={s.avatarLogo}\r\n            src={profile.photos.large ? profile.photos.large : userLogoDefault} alt=\"\" />\r\n        </div>\r\n        <div className={s.info}>\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n          <h2 className={s.infoText}>{profile.fullName}</h2>\r\n\r\n          <p className={s.infoTextMin}>Статус: {profile.aboutMe}</p>\r\n          <p className={s.infoText}>{profile.fullName}</p>\r\n\r\n          <p className={s.infoTextMin}>Контакты</p>\r\n          <p className={s.infoText}>Facebook: {profile.contacts.facebook}</p>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\nexport default Person","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <img src=\"https://www.w3schools.com/howto/img_avatar.png\" alt=\"\" />\r\n      <span>{props.message}</span>\r\n      <button className={s.like} >\r\n        <span>{props.likesCount} </span>\r\n        Like\r\n      </button>\r\n      <button className={s.dislike}>Dislike</button>\r\n    </div>\r\n  )\r\n};\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n  console.log(\" Render\")\r\n  let postElements =\r\n    [...props.posts].reverse()\r\n      .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <WrappedAddNewPostForm onSubmit={props.addPost} />\r\n      {postElements}\r\n    </div>\r\n  )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit} className={s.newPost}>\r\n    <Field\r\n      name=\"newPostText\"\r\n      component={Textarea}\r\n      validate={[required, maxLength10]} />\r\n    <button className={s.button} >Add Post</button>\r\n  </form>;\r\n};\r\nconst WrappedAddNewPostForm = reduxForm({ form: 'addNewPost' })(AddNewPostForm);\r\n\r\nexport default MyPosts\r\n","import MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator} from \"../../../Redux/profile-reduser\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    posts: state.profilePage.posts\r\n  }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    addPost: (data) => dispatch(addPostActionCreator(data.newPostText)),\r\n  }\r\n\r\n};\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport Person from './Person/Person';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <section className={s.profile}>\r\n      <Person profile={props.profile}\r\n              status={props.status}\r\n              updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer/>\r\n    </section>\r\n  )\r\n};\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../Redux/profile-reduser\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getStatus(userId);\r\n    this.props.getUserProfile(userId);\r\n  }\r\n  render() {\r\n\r\n    return <Profile\r\n      {...this.props}\r\n      profile={this.props.profile}\r\n      status={this.props.status}\r\n      updateStatus={this.props.updateStatus} />\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}